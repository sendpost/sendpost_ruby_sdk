=begin
#SendPost API

#SendPost API to send transactional emails reliably

OpenAPI spec version: 1.0.0
Contact: hello@sendx.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::AccountipApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccountipApi' do
  before do
    # run before each test
    @instance = SwaggerClient::AccountipApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountipApi' do
    it 'should create an instance of AccountipApi' do
      expect(@instance).to be_instance_of(SwaggerClient::AccountipApi)
    end
  end

  # unit tests for i_p_router_allocate_ip
  # Allocate IP To Account
  # @param x_account_api_key Account API Key
  # @param [Hash] opts the optional parameters
  # @return [Array<ModelsIP>]
  describe 'i_p_router_allocate_ip test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for i_p_router_count
  # Count Total AccountIPs
  # @param x_account_api_key Account API Key
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search search term
  # @return [ModelsCountStat]
  describe 'i_p_router_count test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for i_p_router_delete
  # Delete IP
  # @param x_account_api_key Account API Key
  # @param ipid The IPId you want to delete
  # @param [Hash] opts the optional parameters
  # @return [ModelsDeleteResponse]
  describe 'i_p_router_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for i_p_router_get
  # Find IP by IPId
  # @param x_account_api_key Account API Key
  # @param ipid the IPId you want to get
  # @param [Hash] opts the optional parameters
  # @return [ModelsIP]
  describe 'i_p_router_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for i_p_router_get_all
  # Get All IPs
  # @param x_account_api_key Account API Key
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset offset
  # @option opts [Integer] :limit limit
  # @option opts [String] :search search term
  # @return [Array<ModelsIP>]
  describe 'i_p_router_get_all test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for i_p_router_update
  # Update an IP
  # @param x_account_api_key Account API Key
  # @param ipid The IP you want to update
  # @param body The IP Email Provider Settings
  # @param [Hash] opts the optional parameters
  # @return [ModelsIP]
  describe 'i_p_router_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
